array-bracket-newline:
  - warn
  - multiline: true
    minItems: null
array-bracket-spacing:
  - warn
  - never
  - singleValue: false
    objectsInArrays: false
    arraysInArrays: false
array-element-newline: off
block-spacing:
  - warn
  - always
brace-style:
  - warn
  - 1tbs
  - allowSingleLine: true
camelcase: off # no_u
capitalized-comments: off
comma-dangle:
  - warn
  - always-multiline # = `${Math.random() > .5 ? "only" : "always"}-multiline`;
comma-spacing:
  - warn
  - before: false
    after: true
comma-style:
  - warn
  - last
computed-property-spacing:
  - warn
  - never
consistent-this: off
eol-last:
  - warn
  - always
func-call-spacing:
  - warn
  - never
func-name-matching: off
func-names: off
func-style:
  - warn
  - declaration
  - allowArrowFunctions: true
function-paren-newline:
  - warn
  - consistent
id-blacklist: off
id-length: off
id-match: off
implicit-arrow-linebreak: off
indent:
  - warn
  - 3
  - SwitchCase: 1
jsx-quotes: off
key-spacing:
  - warn
  - beforeColon: false
    afterColon: true
    mode: strict
keyword-spacing:
  - warn
  - before: true
    after: true
# line-comment-position: warn
linebreak-style:
  - error
  - unix
lines-around-comment: off
lines-between-class-members: off
max-depth: off
max-len:
  - warn
  - 120
  - 2
max-lines: off
max-lines-per-function: off
max-nested-callbacks: off
max-params: off
max-statements: off
max-statements-per-line: off
multiline-comment-style: off
multiline-ternary:
  - warn
  - always-multiline
new-cap: off
new-parens: off # new Something; is good and cool
newline-per-chained-call: off
no-array-constructor: error
no-bitwise: off
no-continue: off
no-inline-comments: off
no-lonely-if: warn
no-mixed-operators: off
no-mixed-spaces-and-tabs: error
no-multi-assign: off
no-multiple-empty-lines: off
no-negated-condition: warn
no-nested-ternary: off
no-new-object: error
no-plusplus: off
no-restricted-syntax: off # just know what you're doing
no-tabs: error
no-ternary: off
no-trailing-spaces: warn
no-unneeded-ternary: warn
no-whitespace-before-property: warn
nonblock-statement-body-position:
  - warn
  - beside
object-curly-newline:
  - warn
  - consistent: true
object-curly-spacing:
  - warn
  - always
object-property-newline: off
one-var: off # do what's best
one-var-declaration-per-line:
  - warn
  - initializations
operator-assignment:
  - warn
  - always
operator-linebreak:
  - warn
  - before
padded-blocks:
  - warn
  - never
padding-line-between-statements: off # shut
prefer-exponentiation-operator: warn
prefer-object-spread: warn
quote-props:
  - warn
  - as-needed
  - keywords: false
    unnecessary: false
    numbers: false
quotes:
  - warn
  - double
  - avoidEscape: true
    allowTemplateLiterals: false
semi:
  - error
  - always
semi-spacing:
  - warn
  - before: false
    after: true
semi-style:
  - warn
  - last
sort-keys: off
sort-vars: off
space-before-blocks:
  - warn
  - always
space-before-function-paren:
  - warn
  - anonymous: always
    named: never
    asyncArrow: always
space-in-parens:
  - warn
  - never
space-infix-ops:
  - warn
  - int32Hint: true
space-unary-ops:
  - warn
  - words: true
    nonwords: false
# spaced-comment:
#   - warn
#   - always
spaced-comment: off # figure out how to do this: //> the_return_value
switch-colon-spacing:
  - warn
  - before: false
    after: true
template-tag-spacing:
  - warn
  - never
unicode-bom:
  - warn
  - never
wrap-regex: off
