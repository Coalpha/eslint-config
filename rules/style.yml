array-bracket-newline:
  - error
  - multiline: true
    minItems: null
array-bracket-spacing:
  - warn
  - never
  - singleValue: false
    objectsInArrays: false
    arraysInArrays: false
array-element-newline: off
block-spacing:
  - error
  - always
brace-style:
  - error
  - 1tbs
  - allowSingleLine: true
camelcase: off
capitalized-comments:
  - warn
  - never
comma-dangle:
  - error
  - only-multiline
comma-spacing:
  - error
  - before: false
    after: true
comma-style:
  - error
  - last
  - exceptions:
      ArrayExpression: false
      ArrayPattern: false
      ArrowFunctionExpression: false
      CallExpression: false
      FunctionDeclaration: false
      FunctionExpression: false
      ImportDeclaration: false
      ObjectExpression: false
      ObjectPattern: false
      VariableDeclaration: false
      NewExpression: false
computed-property-spacing:
  - error
  - never
consistent-this:
  - warn
  - that
  - self
eol-last:
  - warn
  - always
func-call-spacing:
  - error
  - never
func-name-matching: off
func-names:
  - warn
  - as-needed
func-style:
  - warn
  - declaration
  - allowArrowFunctions: true
function-paren-newline: off
id-blacklist: off
id-length:
  - warn
  - min: 0
    max: 35
    exceptions: []
id-match: off
implicit-arrow-linebreak: off
indent:
  - error
  - 2
  - SwitchCase: 1
jsx-quotes: off
key-spacing:
  - error
  - beforeColon: false
    afterColon: true
    mode: strict
keyword-spacing:
  - error
  - before: true
    after: true
    overrides: {}
# line-comment-position: warn
linebreak-style:
  - error
  - unix
lines-around-comment: off
lines-between-class-members:
  - warn
  - always
max-depth: off
max-len:
  - warn
  - 120
  - 2
max-lines: off
max-lines-per-function: off
max-nested-callbacks: off
max-params:
  - warn
  - 4
max-statements: off
max-statements-per-line: off
# multiline-comment-style:
#   - warn
#   - starred-block
multiline-comment-style: off
multiline-ternary:
  - warn
  - always-multiline
new-cap:
  - warn
  - capIsNew: false
new-parens: warn
newline-per-chained-call:
  - warn
  - ignoreChainWithDepth: 4
no-array-constructor: error
no-bitwise: off
no-continue: off
no-inline-comments: off
no-lonely-if: error
no-mixed-operators: off
no-mixed-spaces-and-tabs: error
no-multi-assign: off
no-multiple-empty-lines:
  - warn
  - max: 2
no-negated-condition: error
no-nested-ternary: warn # not sure about this one
no-new-object: error
no-plusplus: off
no-restricted-syntax:
  - error
  - selector: ForInStatement
    message: for..in iterates over the entire prototype chain, catching any mistakenly enumerable values
  - selector: WithStatement
    message: "`with` destroys performance and makes code harder to understand"
no-tabs: error
no-ternary: off
no-trailing-spaces: error
no-unneeded-ternary: error
no-whitespace-before-property: error
nonblock-statement-body-position:
  - error
  - beside
object-curly-newline:
  - error
  - consistent: true # maybe instead, use multiline?
object-property-newline:
  - error
  - allowAllPropertiesOnSameLine: true
one-var:
  - warn
  - initialized: never
    uninitialized: always
one-var-declaration-per-line:
  - error
  - initializations
operator-assignment:
  - warn
  - always
operator-linebreak:
  - warn
  - before
padded-blocks:
  - error
  - never
prefer-object-spread: error
quote-props:
  - error
  - consistent-as-needed # Can't choose?
  - keywords: true
quotes:
  - error
  - double
  - avoidEscape: true
    allowTemplateLiterals: false
semi:
  - error
  - always
semi-spacing:
  - error
  - before: false
    after: true
semi-style:
  - error
  - last
sort-keys: off
sort-vars: off
space-before-blocks:
  - error
  - always
space-before-function-paren:
  - error
  - anonymous: always
    named: never
    asyncArrow: always
space-in-parens:
  - error
  - never
space-infix-ops:
  - error
  - int32Hint: true
space-unary-ops:
  - error
  - words: true
    nonwords: false
spaced-comment:
  - error
  - always
switch-colon-spacing:
  - error
  - before: false
    after: true
template-tag-spacing:
  - error
  - never
unicode-bom:
  - warn
  - never
wrap-regex: off
